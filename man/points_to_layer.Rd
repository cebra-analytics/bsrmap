% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/points_to_layer.R
\name{points_to_layer}
\alias{points_to_layer}
\alias{points_to_layer.Raster}
\alias{points_to_layer.SpatRaster}
\title{Convert point data to a raster layer}
\usage{
points_to_layer(
  x,
  y,
  name = "predicted",
  max_distance = 250,
  filename = "",
  ...
)

\method{points_to_layer}{Raster}(
  x,
  y,
  name = "predicted",
  max_distance = 250,
  filename = "",
  ...
)

\method{points_to_layer}{SpatRaster}(
  x,
  y,
  name = "predicted",
  max_distance = 250,
  filename = "",
  ...
)
}
\arguments{
\item{x}{A \code{raster::Raster*} or \code{terra::SpatRaster}
object representing the spatial configuration (template) of the layer to
be set via point values \code{y}. Optionally \code{x} may define the
nearest point indices and distances via two spatial layers labelled
"nearest" and "distance" respectively.}

\item{y}{Point data as a \code{data.frame} (or \code{matrix}) with WGS84
\emph{lon} and \emph{lat} columns, as well as a named column of point
values specified by the \code{name} parameter.}

\item{name}{Character name of the column of \code{y} containing the point
values. Default is "predicted" (as per outputs of
\code{\href{bssdm}{https://github.com/cebra-analytics/bssdm}::predict}).}

\item{max_distance}{Numeric maximum distance range used to find the nearest
point from \code{y} for each cell in \code{x}. Default is 250 km.}

\item{filename}{Optional file writing path (character).}

\item{...}{Additional parameters (passed to \code{writeRaster}).}
}
\value{
A \code{terra::SpatRaster} object containing a spatial layer with
each cell value set to the value of the nearest point from \code{y} when
within the specified \code{max_distance} range.
}
\description{
Converts point data to a raster layer defined by a template raster by
setting the value of each raster cell to the value of the nearest point
within a maximum distance range. The template may optionally define the
nearest point indices and distances as separate spatial layers to save
processing time for reusable data sets.
}
